name: build

on: [push, pull_request]

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        compiler: [
            g++
        ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Ubuntu Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install vulkan-validationlayers-dev \
          spirv-tools libxxf86vm-dev libxi-dev libxrandr-dev \
          libxinerama-dev libxcursor-dev mesa-common-dev xorg-dev

      - name: Install Qt
        uses: jurplel/install-qt-action@v3

      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: latest
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{ runner.workspace }}/build ${{ runner.workspace }}/instdir

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        env:
          CXX: ${{ matrix.compiler }}
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: |
          cmake \
            $GITHUB_WORKSPACE \
             -DBUILD_TESTING=ON -DBUILD_DOCS=ON -DINSTALL_APPS=ON \
             -DCMAKE_INSTALL_PREFIX="${{ runner.workspace }}/instdir -G "MinGW Makefiles""

      - name: Build
        working-directory: ${{ runner.workspace }}/build
        shell: bash
        # Execute the build. You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config Release

      - name: Run tests
        working-directory: ${{ runner.workspace }}/build
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest --timeout 10 -C Release -j4

      - name: Install Strip
        working-directory: ${{ runner.workspace }}/build
        shell: bash
        run: cmake --install . --strip

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: ${{ runner.workspace }}/instdir
          name: ubuntu-${{ matrix.compiler }}

  windows:
    strategy:
      fail-fast: false
      matrix:
        compiler: [
            cl
        ]

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Qt
        uses: jurplel/install-qt-action@v3

      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: latest
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{ runner.workspace }}/build ${{ runner.workspace }}/instdir

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        env:
          CXX: ${{ matrix.compiler }}
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: |
          cmake \
            $GITHUB_WORKSPACE \
            -DBUILD_TESTING=ON -DBUILD_DOCS=ON -DINSTALL_APPS=ON \
            -DCMAKE_INSTALL_PREFIX="${{ runner.workspace }}/instdir"

      - name: Build
        working-directory: ${{ runner.workspace }}/build
        shell: bash
        # Execute the build. You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config Release

      - name: Run tests
        working-directory: ${{ runner.workspace }}/build
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest --timeout 10 -C Release -j4

      - name: Install Strip
        working-directory: ${{ runner.workspace }}/build
        shell: bash
        run: cmake --install . --strip

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: ${{ runner.workspace }}/instdir
          name: ubuntu-${{ matrix.compiler }}